
name: CI DBconection

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.2
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: mydb
        ports:
          # will assign a random free host port
          - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
   
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Build and deploy Spring project
      run: |
       
        mvn clean package --file pom.xml
        docker build -f Dockerfile  .
        docker images
        docker run -e POSTGRES_PASSWORD=pass -p 8080:8080 postgres
        sed -i "s/localhost/host.docker.internal/g" src/main/resources/application.properties
        git add src/main/resources/application.properties
        git commit -m "Connect to PostgreSQL database"
#     - name: Connect Spring project to PostgreSQL database
   
#       run: |
#         sed -i "s/localhost/host.docker.internal/g" src/main/resources/application.properties
#         git add src/main/resources/application.properties
#         git commit -m "Connect to PostgreSQL database"


