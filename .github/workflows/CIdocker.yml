
name: CI DBconection

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.2
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: spring-jwt
        ports:
          # will assign a random free host port
          - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
   
   
   
#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up JDK 11
#       uses: actions/setup-java@v3
#       with:
#         java-version: '11'
#         distribution: 'temurin'
#         cache: maven
#     - name: Build with Maven
#       run: mvn -B package --file pom.xml
#     steps:
#       - uses: actions/checkout@v1

#       - name: Set up JDK 11
#         uses: actions/setup-java@v1
#         with:
#           java-version: 1.8
    steps:
    - name: Build and deploy Spring project
      run: |
        cd /
        mvn clean package
        docker build -t my-spring-app .
        docker run -p 8080:8080 my-spring-app

    - name: Connect Spring project to PostgreSQL database
      run: |
       cd /
       sed -i "s/localhost/host.docker.internal/g" src/main/resources/application.properties
        git add src/main/resources/application.properties
        git commit -m "Connect to PostgreSQL database"
